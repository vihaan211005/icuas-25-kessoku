name: icuas_competition_example
root: ./
startup_window: crazyflies_start
pre_window: |
  source <%= @settings["setup_name"] %>
windows:
  - crazyflies_start:
      layout: tiled
      panes:
        - bash /root/CrazySim/ros2_ws/src/icuas25_competition/launch/sitl_multiagent_text.sh -m crazyflie -f $SPAWN_POSE_DOC -w $ENV_NAME -n $NUM_ROBOTS
        - waitForCfGazebo; sleep 8; bash ./generate_gazebo_bridge_yaml.sh $NUM_ROBOTS; ros2 launch icuas25_competition cf_velmux_launch.py
        - waitForCfGazebo; sleep 10; ros2 launch icuas25_competition aruco_recognition.launch.py
        - waitForCfGazebo; sleep 10; ros2 launch icuas25_competition octomap_server.launch.py

  - topic_pane:
      layout: tiled
      panes:
        - >
          history -s 'ros2 topic pub /mission_start std_msgs/msg/Bool "{data: true}"'
        - >
          history -s 'ros2 topic pub /return_to_base std_msgs/msg/Bool "{data: true}"'

  - submission:
      layout: tiled
      panes:
        - waitForCfGazebo; waitForMissionStart; ros2 run icuas25_competition crazyflie_client
        - waitForCfGazebo; waitForMissionStart; while true; do ros2 topic echo /target_found 2>/dev/null | grep .; sleep 1; done
        - waitForCfGazebo; waitForMissionStart; python3 /root/CrazySim/ros2_ws/src/icuas25_competition/scripts/odom_logger.py
        - waitForCfGazebo; waitForMissionStart; python3 /root/CrazySim/ros2_ws/src/icuas25_competition/scripts/battery_logger.py
  # - octomap_viz:
  #     layout: tiled
  #     panes:
  #       - waitForCfGazebo; waitForMissionStart; ros2 run tf2_ros static_transform_publisher 0 0 0 0 0 0 world map
  #       - waitForCfGazebo; waitForMissionStart; echo "ros2 run octomap_server octomap_server_node --ros-args --params-file ../config/octomap.yaml"